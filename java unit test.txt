search maven: junit-jupiter 5.8.0

<dependency>
  <groupId>org.junit.jupiter</groupId>
  <artifactId>junit-jupiter</artifactId>
  <version>5.8.0-M1</version>
</dependency>

reload



package programmer.zaman.now.test;

import org.junit.jupiter.api.*;
import org.opentest4j.TestAbortedException;
import programmer.zaman.now.test.generator.SimpleDisplayNameGenerator;

import static org.junit.jupiter.api.Assertions.*;

@DisplayNameGeneration(SimpleDisplayNameGenerator.class)
public class CalculatorTest {

    Calculator  calculator = new Calculator();

    @BeforeAll
    public static void beforeAll(){
        System.out.println("Before All");
    }

    @AfterAll
    public static void afterAll(){
        System.out.println("After All");
    }

    @BeforeEach
    public void setUp(){
        System.out.println("Before Each");
    }

    @AfterEach
    public void tearDown(){
        System.out.println("After Each");
    }

    @DisplayName("Test skenario input 10 dan null")
    @Test
    public void testAddError(){
        var result = calculator.add(10,null);
    }

    @Test
    public void testAddFailure(){
        assertThrows(NullPointerException.class, () -> {
            calculator.add(10,null);
        });
    }

    @Test
    public void testAddSuccess(){
        var result = calculator.add(10,10);
        if(result != 20){
            throw new RuntimeException("Test gagal");
        }
    }

    @Test
    @Disabled //sebetulnya tinggal hapus @Test nya, tapi biar keliatan
    public void testAddSuccess1(){
        var result = calculator.add(10,10);
        assertEquals(20, result);
    }

    @Test
    public void testDivideSuccess(){
        var result = calculator.divide(100,10);
        assertEquals(10,result);
    }

    @Test
    public void testDivideFailure(){
        assertThrows(IllegalArgumentException.class, () -> calculator.divide(100,0));
    }

    @Test
    public void testAborted(){
        var profile = System.getenv("PROFILE");
        if(!"DEV".equals(profile)){
            throw new TestAbortedException("Test dibatalkan karena bukan DEV");
        }

        // unit test untuk DEV
    }
}



test aborted:
run (pojok kanan atas) -> edit configuration 
-> edit environment
-> tambah(PROFILE, DEV)

@Test
@DisplayName
@Disabled
@BeforeEach
@AfterEach
@BeforeAll
@AfterAll
@Tag

mvn test -Dgroups=Integration-test

bikin independen tiap method

@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
    @Order(1)
